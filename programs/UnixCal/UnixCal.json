[{"mutant_program": "muta0_UnixCal.c", "equivalent": false, "tests": [{"input": ["-", "3"], "original_output": "   March 2021\n S  M Tu  W Th  F  S\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31         \n\n", "mutant_output": "   March 2021\n S  M Tu  W Th  F  S\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31         \n\n", "explanation": "The test uses the same input parameters over both the original and the mutated UnixCal to calculate the calendar for the month of March 2021. Although the two outputs are the same, the original program includes a proper conditional statement to check if the user provided any arguments. The mutant code always goes to the xlong branch, regardless of the number or content of the input parameters, which suggests a reduction in the functionality of the program."}, {"input": ["-", "15"], "original_output": "cal: 15: Bad year.\n", "mutant_output": "cal: 15: Bad year.\n", "explanation": "The test uses the same input parameters over both the original and the mutated UnixCal to calculate the calendar for the year 15 BC. Since the minimum year that UnixCal can show is 1 AD, an error message should be returned both by the original program and the mutant. The outputs of both programs are the same, which reinforces the assumption that the mutant code must have eliminated or reduced the conditional statement for checking ranges of input parameters."}, {"input": ["10", "2000"], "original_output": "   October 2000\n S  M Tu  W Th  F  S\n 1  2  3  4  5  6  7\n 8  9 10 11 12 13 14\n15 16 17 18 19 20 21\n22 23 24 25 26 27 28\n29 30 31            \n\n", "mutant_output": "\n\n\n                                2000\n\n     Oct                         Nov                         Dec\n S  M Tu  W Th  F  S        S  M Tu  W Th  F  S        S  M Tu  W Th  F  S\n 1  2  3  4  5  6           1  2  3  4              1  2  3\n 7  8  9 10 11 12 13        5  6  7  8  9 10 11        4  5  6  7  8  9 10\n14 15 16 17 18 19 20       12 13 14 15 16 17 18       11 12 13 14 15 16 17\n21 22 23 24 25 26 27       19 20 21 22 23 24 25       18 19 20 21 22 23 24\n28 29 30 31              26 27 28 29 30           25 26 27 28 29 30 31\n\n\n", "explanation": "The test uses the same input parameters over both the original and the mutated UnixCal to calculate the calendar for the month of October of the year 2000 and show the three months that follow. The output of the original program displays correctly the desired content. However, the output of the mutant suggests a reduction in functionality, as it still calculates the monthly calendar for the input month but does not display it. On the other hand, the mutant prints the section for the full-year display, but the formatting is wrong and the labels of the months are not correctly ordered. Hence, the mutant code is not equivalent to the original program."}]}]